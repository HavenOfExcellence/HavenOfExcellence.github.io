{"pageProps":{"title":"Admin","unhydratedContent":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Roles\"), mdx(\"h3\", null, \"Node Admin\"), mdx(\"p\", null, \"Node Admins can view all users in their own node and verify their licenses. They can promote other users to Node Admin.\"), mdx(\"h3\", null, \"Hub Admin\"), mdx(\"p\", null, \"Hub Admins can do everything Node Admins can, but also view users in their Hub. They can promote other users to Hub Admin.\"), mdx(\"h3\", null, \"Super Admin\"), mdx(\"h2\", null, \"Viewing users\"), mdx(\"p\", null, \"On the main page, click on the admin tab (only visible when you are an admin)\"), mdx(\"h3\", null, \"View user\"), mdx(\"p\", null, \"The specific user information will be displayed on your screen.\"), mdx(\"p\", null, \"You can see all of the user's created MT-RAC\"), mdx(\"p\", null, \"You can see all of the feedback the user has received\"), mdx(\"p\", null, \"From this view, you can do a few actions on the user itself.\"), mdx(\"h4\", null, \"Promote to admin\"), mdx(\"p\", null, \"You can promote the specific user you selected to a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hub\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"node\"), \" admin depending on your own admin level\"), mdx(\"h4\", null, \"Remove from node\"), mdx(\"p\", null, \"Some users that don't belong in the specific node, you can use this function to remove them from his current node\"), mdx(\"h4\", null, \"Reset password\"), mdx(\"p\", null, \"In the case where the user has forgotten his own password, you can use this feature to set a new password for him\"), mdx(\"h4\", null, \"Verify licence\"), mdx(\"p\", null, \"This button will give the user a verified tick that indicates his licence is verified.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<h2>Roles</h2><h3>Node Admin</h3><p>Node Admins can view all users in their own node and verify their licenses. They can promote other users to Node Admin.</p><h3>Hub Admin</h3><p>Hub Admins can do everything Node Admins can, but also view users in their Hub. They can promote other users to Hub Admin.</p><h3>Super Admin</h3><h2>Viewing users</h2><p>On the main page, click on the admin tab (only visible when you are an admin)</p><h3>View user</h3><p>The specific user information will be displayed on your screen.</p><p>You can see all of the user&#x27;s created MT-RAC</p><p>You can see all of the feedback the user has received</p><p>From this view, you can do a few actions on the user itself.</p><h4>Promote to admin</h4><p>You can promote the specific user you selected to a <code>hub</code> or <code>node</code> admin depending on your own admin level</p><h4>Remove from node</h4><p>Some users that don&#x27;t belong in the specific node, you can use this function to remove them from his current node</p><h4>Reset password</h4><p>In the case where the user has forgotten his own password, you can use this feature to set a new password for him</p><h4>Verify licence</h4><p>This button will give the user a verified tick that indicates his licence is verified.</p>","scope":{}},"auth":true},"__N_SSG":true}